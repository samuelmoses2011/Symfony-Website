<?php
/**
 * Company: Image In A Box
 * Date: 4/24/15
 * Time: 2:39 PM
 * Copyright: 2015
 */

namespace IIAB\MagnetBundle\Form\Type;

use Symfony\Component\Form\AbstractType;
use Symfony\Component\Form\FormBuilderInterface;
use Symfony\Component\OptionsResolver\OptionsResolverInterface;
use Symfony\Component\Form\FormEvents;

class WaitListIndividualProcessingType extends AbstractType {

	public function buildForm( FormBuilderInterface $builder , array $options ) {

		$builder
			->add( 'individual' , 'hidden' )
			->add( 'fillingSlots' , 'choice' , array(
				'choices' => array_flip( [ '0' => 'No' , '1' => 'Yes' ] ) ,
				'placeholder' => 'Choose an Option',
			) )
			->add( 'CPBlack' , 'integer' )
			->add( 'CPWhite' , 'integer' )
			->add( 'CPOther' , 'integer' )
            ->add( 'waitListTotal' , 'integer' , array(
            	'disabled' => true ,
            	'attr' => array( 'min' => 0, 'readonly' => 'readonly' ) ) )
			->add( 'availableSlots' , 'integer' , array(
				'attr' => ['readonly'=>'readonly'],
				'disabled' => true ) )
			->add( 'slotsToAward' , 'integer' )
		;

		$builder->addEventListener( FormEvents::PRE_SET_DATA, function ( $event ) {
            $school_list = $event->getData();
            $form = $event->getForm();

            if( isset( $school_list['HomeZone'] ) ){
            	foreach( $school_list['HomeZone'] as $zone => $count ){
            		$form
            		->add( $zone , 'integer',[
            			'data' => $count,
            		] );
            	}
        	}

        });

	}

	public function setDefaultOptions( OptionsResolverInterface $resolver ) {

		parent::setDefaultOptions( $resolver ); // TODO: Change the autogenerated stub
	}

	public function getName(){

		return 'wait_list_individual_processing';
	}
}